[{"C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\index.js":"1","C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\reportWebVitals.ts":"2","C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\App.tsx":"3","C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\components\\sloganPart.tsx":"4","C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\components\\header.tsx":"5","C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\components\\Connect2Phantom.tsx":"6"},{"size":500,"mtime":1647015795887,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1647006057472,"results":"9","hashOfConfig":"8"},{"size":388,"mtime":1647023672251,"results":"10","hashOfConfig":"8"},{"size":1687,"mtime":1647064642693,"results":"11","hashOfConfig":"8"},{"size":952,"mtime":1647064642692,"results":"12","hashOfConfig":"8"},{"size":3353,"mtime":1647064642690,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4kl2ah",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\index.js",[],[],"C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\reportWebVitals.ts",[],[],"C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\App.tsx",["37"],[],"import React from 'react';\nimport './App.css';\nimport Connect2Phantom from './components/Connect2Phantom';\nimport Header from './components/header';\nimport SloganPart from './components/sloganPart';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n      <SloganPart/>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\components\\sloganPart.tsx",["38"],[],"import React from 'react';\r\nimport wave_img from './wave_img.png';\r\nimport './sloganPart.css';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nfunction SloganPart() {\r\n    const sloganPc={\r\n        display:'flex',\r\n        flex:'row',\r\n        alignItems:'center',\r\n        justifyContent : 'space-between'\r\n    }\r\n    const sloganMobile={\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent : 'space-between'\r\n    }\r\n    const slogan_img={\r\n        marginBottom :'-55px',\r\n        float :'right',\r\n        width:'500px',\r\n        height : '400px'\r\n    }\r\n    const slogan_h1 ={\r\n        fontSize:'50px',\r\n    }\r\n    const IsPc = useMediaQuery({\r\n        query : \"(min-width : 1024px)\"\r\n    })\r\n\r\n    return (\r\n        <div className=\"sloganPart\">\r\n      <div style={IsPc?sloganPc:sloganMobile as React.CSSProperties} >\r\n           <div className=\"slogan_text\">\r\n          <h1 style={slogan_h1}>Paint Us with Your NFTs</h1>\r\n          <p>Pi-market is an NFT market where you can mint and freely<br/>\r\n          purchase NFT works related to the school you belong to.<br/>\r\n          Sell and purchase any works of art, including photos, pictures,<br/>\r\n          videos, music, etc. from your beloved school.</p>\r\n          \r\n          </div>\r\n\r\n          <img style={slogan_img as React.CSSProperties} src={wave_img}/>\r\n      </div>\r\n      <p>Trending Auction</p>\r\n      <hr/>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default SloganPart;",["39","40"],"C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\components\\header.tsx",["41","42"],[],"import React from 'react';\r\nimport pi_logo from './pi_logo.png';\r\nimport './header.css';\r\nimport { NonceAccount } from '@solana/web3.js';\r\nimport Connect2Phantom from './Connect2Phantom';\r\nimport { useMediaQuery } from 'react-responsive';\r\nfunction Header() {\r\n\r\n  const buttonsPc={\r\n    display:'flex',\r\n    flex: 'row'\r\n  }\r\n  const buttonsMobile={\r\n    marginTop:'20px'\r\n  }\r\n  const IsPc = useMediaQuery({\r\n    query : \"(min-width : 1024px)\"\r\n})\r\n  return (\r\n    <div className=\"Header\">\r\n        <img className=\"Header_img\" src={pi_logo} alt='React' />  \r\n        <input/>\r\n        <div style={IsPc? buttonsPc:buttonsMobile as React.CSSProperties}>\r\n        <button>Explore</button>\r\n        <button>Minting</button>\r\n        <Connect2Phantom/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","C:\\Users\\rlawl\\OneDrive\\바탕 화면\\Pi-Market\\src\\components\\Connect2Phantom.tsx",["43","44","45"],[],"\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { Connection, PublicKey, clusterApiUrl } from \"@solana/web3.js\";\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\ntype PhantomEvent = \"disconnect\" | \"connect\" | \"accountChanged\";\r\n\r\ninterface ConnectOpts {\r\n    onlyIfTrusted: boolean;\r\n}\r\n\r\ninterface PhantomProvider {\r\n    connect: (opts?: Partial<ConnectOpts>) => Promise<{ publicKey: PublicKey }>;\r\n    disconnect: ()=>Promise<void>;\r\n    on: (event: PhantomEvent, callback: (args:any)=>void) => void;\r\n    isPhantom: boolean;\r\n}\r\n\r\ntype WindowWithSolana = Window & { \r\n    solana?: PhantomProvider;\r\n}\r\n\r\n\r\n\r\nconst Connect2Phantom: FC = () => {\r\n\r\n    const [ walletAvail, setWalletAvail ] = useState(false);\r\n    const [ provider, setProvider ] = useState<PhantomProvider | null>(null);\r\n    const [ connected, setConnected ] = useState(false);\r\n    const [ pubKey, setPubKey ] = useState<PublicKey | null>(null);\r\n\r\n\r\n    useEffect( ()=>{\r\n        if (\"solana\" in window) {\r\n            const solWindow = window as WindowWithSolana;\r\n            if (solWindow?.solana?.isPhantom) {\r\n                setProvider(solWindow.solana);\r\n                setWalletAvail(true);\r\n                // Attemp an eager connection\r\n                solWindow.solana.connect({ onlyIfTrusted: true });\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        provider?.on(\"connect\", (publicKey: PublicKey)=>{ \r\n            console.log(`connect event: ${publicKey}`);\r\n            setConnected(true); \r\n            setPubKey(publicKey);\r\n        });\r\n        provider?.on(\"disconnect\", ()=>{ \r\n            console.log(\"disconnect event\");\r\n            setConnected(false); \r\n            setPubKey(null);\r\n        });\r\n\r\n    }, [provider]);\r\n\r\n\r\n    const connectHandler: React.MouseEventHandler<HTMLButtonElement> = (event) => {\r\n        console.log(`connect handler`);\r\n        provider?.connect()\r\n        .catch((err) => { console.error(\"connect ERROR:\", err); });\r\n    }\r\n\r\n    const disconnectHandler: React.MouseEventHandler<HTMLButtonElement> = (event) => {\r\n        console.log(\"disconnect handler\");\r\n        provider?.disconnect()\r\n        .catch((err) => {console.error(\"disconnect ERROR:\", err); });\r\n    }\r\n    const IsPc = useMediaQuery({\r\n        query : \"(min-width : 1024px)\"\r\n    })\r\n\r\n    const walletButtonPc={\r\n        backgroundColor : '#00704A',\r\n        color: 'white',\r\n        textShadow : 'none',\r\n        width:'300px',\r\n        height:'50px',\r\n        boxShadow:'5px 5px 5px gray'\r\n        \r\n      }\r\n      const walletButtonMobile={\r\n        backgroundColor : 'white',\r\n        color: 'black',\r\n        textShadow : '5px 5px 5px gray'\r\n        \r\n        \r\n      }\r\n\r\n    return (\r\n        <div>\r\n            { walletAvail ?\r\n                <>\r\n                <button style={IsPc?walletButtonPc:walletButtonMobile} disabled={connected} onClick={connectHandler}>Connect Wallet</button>\r\n                 { connected ? <p>Your public key is : {pubKey?.toBase58()}</p> : null }\r\n                </>\r\n            :\r\n                <>\r\n                <button style={IsPc?walletButtonPc:walletButtonMobile} onClick={() => window.open('https://phantom.app/', '_blank')}>Connect Wallet</button>\r\n                \r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Connect2Phantom;",{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":23},{"ruleId":"50","severity":1,"message":"51","line":50,"column":11,"nodeType":"52","endLine":50,"endColumn":100},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"46","severity":1,"message":"57","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":22},{"ruleId":"46","severity":1,"message":"58","line":7,"column":10,"nodeType":"48","messageId":"49","endLine":7,"endColumn":25},{"ruleId":"46","severity":1,"message":"59","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":20},{"ruleId":"46","severity":1,"message":"60","line":3,"column":33,"nodeType":"48","messageId":"49","endLine":3,"endColumn":46},{"ruleId":"46","severity":1,"message":"61","line":66,"column":11,"nodeType":"48","messageId":"49","endLine":66,"endColumn":72},"@typescript-eslint/no-unused-vars","'Connect2Phantom' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'NonceAccount' is defined but never used.","'findByLabelText' is defined but never used.","'Connection' is defined but never used.","'clusterApiUrl' is defined but never used.","'disconnectHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]